#inhibit_all_warnings!
#use_frameworks! #使用动态库
source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '11.0'
target 'MyProjectModule' do
  pod 'Masonry'
  pod 'YYKit'
  pod 'pop', '~> 1.0'
  pod 'MJExtension'
  pod 'MJRefresh'
  pod 'AFNetworking'
  pod 'KVOController'
  pod 'SDWebImage', '~> 5.8.4'
  pod 'YTKNetwork'
  pod 'Aspects' # AOP
  pod 'FMDB'
  pod 'RxCocoa'
#  pod "Texture"
  pod 'ReactiveObjC','~> 3.1.0'
  pod 'GPUImage'
#  pod 'MLeaksFinder' #和DoraemonKit的分类一样导致方法都不会执行
  pod 'LookinServer', :configurations => ['Debug'] # Lookin UI调试
  pod 'matrix-wechat' #微信的APM工具
#  pod 'FBAllocationTracker' # 检测潜在的内存泄漏对象，并提供给 FBRetainCycleDetector 进行检测 这是一个用来主动追踪所有 NSObject 的子类的内存分配和释放操作的工具。 FBAllocationTracker 用于检测应用在运行时所有实例的分配。它的原理其实就是用 method swizzling 替换原本的 alloc 方法。这样就可以记录下所有的实例分配了。
  pod 'FBMemoryProfiler'
  pod 'OOMDetector', '1.3'  #实现OOM监控、大内存分配监控、内存泄漏检测等功能。 项目中有多个fishhook的时候，#import "fishhook.h"不正确，最好使用#import <fishhook/fishhook.h>
#  pod 'RIBs' # Uber 很多移动应用背后的跨平台架构框架。 RIB 是 Router、Interactor 和 Builder 的缩写，它们是该架构的核心组件。该框架是为具有大量工程师和嵌套状态的移动应用程序而设计的
  pod 'MMKV' #MMKV 基于 mmap 内存映射的 key-value 组件，底层序列化/反序列化使用 protobuf 实现，性能高，稳定性强
  # 滴滴哆啦A梦监控APM
  pod 'DoraemonKit/Core', '~> 3.0.4', :configurations => ['Debug'] #必选 Core subspec作为核心，必须引入
  pod 'DoraemonKit/WithLogger', '~> 3.0.4', :configurations => ['Debug'] #可选 如果你的日志是基于CocoaLumberjack，那你也可以引入WithLogger subspec。
  pod 'DoraemonKit/WithLoad', '~> 3.0.4', :configurations => ['Debug'] #可选 如果你要集成Load耗时检测的话，那就请接入WithLoad subspec。
  pod 'DoraemonKit/WithMLeaksFinder', '~> 3.0.4', :configurations => ['Debug'] #可选 如果你要使用MLeaksFinder查找内存泄漏的问题的话，那就请接入WithMLeaksFinder subspec。

  ######Swift########
  pod 'SnapKit', '~> 4.0.0'
  pod 'RxSwift'
  pod 'Kingfisher', '~> 6.3.0'
  # 使用Moya接入API，它的设计风格就是利用枚举来实现，特别很好的利用枚举绑定值这个特性
  pod 'Moya', '~> 14.0'

  # Flutter 引入 现有 Native 工程
#  flutter_application_path = "/Users/zhangxinxin/Code/FlutterDoc/my_flutter"
#  eval(File.read(File.join(flutter_application_path, '.ios', 'Flutter', 'podhelper.rb')), binding)

end
