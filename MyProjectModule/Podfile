inhibit_all_warnings!
use_frameworks!
target 'MyProjectModule' do
  pod 'Masonry'
  pod 'YYKit'
  pod 'pop', '~> 1.0'
  pod 'MJExtension'
  pod 'MJRefresh'
  pod 'AFNetworking'
  pod 'KVOController'
  pod 'SDWebImage', '~> 4.3.3'
  pod 'YTKNetwork'
  pod 'Aspects' # AOP
  pod 'SnapKit', '~> 4.0.0'
  pod 'FMDB'
  pod 'RxSwift', '~> 5'
  pod 'RxCocoa', '~> 5'
#  pod "Texture"
  pod 'ReactiveObjC','~> 3.1.0'
  pod 'GPUImage'
  pod 'MLeaksFinder'
  pod 'LookinServer', :configurations => ['Debug'] # Lookin UI调试
  pod 'matrix-wechat' #微信的APM工具
  pod 'MMKV' #MMKV 是基于 mmap 内存映射的 key-value 组件，底层序列化/反序列化使用 protobuf 实现，性能高，稳定性强
  # 滴滴哆啦A梦监控APM
  pod 'DoraemonKit/Core', '~> 3.0.4', :configurations => ['Debug'] #必选 Core subspec作为核心，必须引入
  pod 'DoraemonKit/WithLogger', '~> 3.0.4', :configurations => ['Debug'] #可选 如果你的日志是基于CocoaLumberjack，那你也可以引入WithLogger subspec。
  pod 'DoraemonKit/WithLoad', '~> 3.0.4', :configurations => ['Debug'] #可选 如果你要集成Load耗时检测的话，那就请接入WithLoad subspec。
  pod 'DoraemonKit/WithMLeaksFinder', '~> 3.0.4', :configurations => ['Debug'] #可选 如果你要使用MLeaksFinder查找内存泄漏的问题的话，那就请接入WithMLeaksFinder subspec。


  # Flutter 引入 现有 Native 工程
#  flutter_application_path = "/Users/zhangxinxin/Code/FlutterDoc/my_flutter"
#  eval(File.read(File.join(flutter_application_path, '.ios', 'Flutter', 'podhelper.rb')), binding)

end
